// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @default(autoincrement()) @id
  firstName String
  lastName String
  email String @unique
  emailVerify Boolean @default(false)
  password String 
  phoneNumber String 
  phoneVerify  Boolean @default(false)
  location String
  status Int @default(1)
  type Int @default(2)
  hotel Hotel?
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt 
}

model HotelType{
  id Int @default(autoincrement()) @id
  name String
  image String
  hotels Hotel[]
  createAt DateTime @default(now())
  updateAt DateTime @default(now()) @updatedAt
}

model Hotel{
  id Int @default(autoincrement()) @id
  name String
    markUp Int
    isAbkhazia Boolean
    region String
    city String
    street String
    home String
    frame String
    latitude Float
    longitude Float
    createAt DateTime @default(now())
    updateAt DateTime @default(now()) @updatedAt
    user User @relation(fields: [userId],references: [id])
    type HotelType @relation(fields: [htId],references: [id])
    infras InfrasOnHotels[]
    nutritions NutritionsonHotels[]
    transportFacilities TransportFacilitiesonHotels[]
    htId Int
    userId Int @unique
    reseption HotelReseption?
    wifi HotelWifi?
    transport HotelTransport?
}


model HotelReseption{
  id Int @default(autoincrement()) @id
  status Boolean @default(false) // false available true impossible
  type Int @default(1)   // 1  Around the clock 2 I'll indicate the time
  fromTime String?
  toTime String?
  checkIn String?
  checkOut String?
  hotel Hotel @relation(fields: [hotelId],references: [id])
  hotelId Int @unique
}

model HotelInfra{
  id Int @default(autoincrement()) @id
  name String
  hotels InfrasOnHotels[]
}

model InfrasOnHotels{ 
  hotel Hotel @relation(fields: [hotelId],references: [id])
  hotelId Int
  infra HotelInfra @relation(fields: [infraId],references: [id])
  infraId Int
  assignedAt DateTime @default(now())
  @@id([hotelId,infraId])
}


model HotelNutrition{
  id Int @default(autoincrement()) @id
  name String
  hotels NutritionsonHotels[]
}

model NutritionsonHotels{
  hotel Hotel @relation(fields: [hotelId],references: [id])
  nutrition HotelNutrition @relation(fields: [nutritionId],references: [id])
  hotelId Int
  nutritionId Int
  assignedAt DateTime @default(now())
  @@id([hotelId,nutritionId])
}


model HotelWifi{
  id Int @default(autoincrement()) @id
  enableHotelWifi Boolean @default(false) // false impossible true available
  typeHotelWifi Boolean @default(false) // fasle not included in price true included in price
  enableRoomWifi Boolean @default(false) // false impossible true available
  typeRoomWifi Boolean @default(false) // false not included in price true included in price
  priceRoomWifi Int?
  priceHotelWifi Int?
  hotel Hotel @relation(fields: [wifiId],references: [id])
  wifiId Int @unique
}

model HotelTransport{
  id Int @default(autoincrement()) @id
  enablePark Boolean @default(false) // false impossible parking true available
  typePark Boolean @default(false) // fasle not included in price true included in price 
  enableTransfer Boolean @default(false) // false impossible parking true available
  typeTransfer Boolean @default(false) // fasle not included in price true included in price 
  pricePark Int?
  priceTransfer Int?
  hotel Hotel @relation(fields: [transportId],references: [id])
  transportId Int @unique
}

model HotelTransportFacility{
  id Int @default(autoincrement()) @id
  name String
  hotels TransportFacilitiesonHotels[]
}

model TransportFacilitiesonHotels{
  hotel Hotel @relation(fields: [hotelId],references: [id])
  hotelId Int
  transportFacility HotelTransportFacility @relation(fields: [transportFacilityId],references: [id])
  transportFacilityId Int
  @@id([hotelId,transportFacilityId])
  assignedAt DateTime @default(now())
}